name: Component Availability Monitor

on:
  schedule:
    # Run daily at 8 AM UTC
    - cron: '0 8 * * *'
  workflow_dispatch:
    inputs:
      check_critical_only:
        description: 'Check only safety-critical components'
        required: false
        default: true
        type: boolean

env:
  NEXAR_CLIENT_ID: ${{ secrets.NEXAR_CLIENT_ID }}
  NEXAR_CLIENT_SECRET: ${{ secrets.NEXAR_CLIENT_SECRET }}

jobs:
  monitor-availability:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      issues: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests pandas python-dotenv

    - name: Check component availability
      id: availability_check
      run: |
        python scripts/check_availability.py --critical-only=${{ github.event.inputs.check_critical_only || 'true' }}
      continue-on-error: true

    - name: Create alert for unavailable components
      if: steps.availability_check.outputs.unavailable_components == 'true'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');

          let reportContent = '';
          try {
            reportContent = fs.readFileSync('availability_report.md', 'utf8');
          } catch (error) {
            reportContent = '‚ùå Unable to generate availability report';
          }

          const issueBody = `${reportContent}

          ## üö® Action Required

          **Critical components are showing low availability or are out of stock.**

          ### Immediate Actions:
          1. **Review affected components** listed above
          2. **Source alternative suppliers** for out-of-stock items
          3. **Consider alternative components** if needed
          4. **Update BOM** with alternative part numbers if substitutions are made
          5. **Test alternatives** before finalizing changes

          ### Prevention:
          - Monitor lead times for affected components
          - Consider ordering critical components in advance
          - Maintain alternative supplier list

          *This alert was automatically generated by the component availability monitoring system.*`;

          const issue = await github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: 'üö® Component Availability Alert - Critical Parts Low Stock',
            body: issueBody,
            labels: ['automation', 'availability', 'urgent', 'supply-chain']
          });

          console.log(`Created urgent availability issue #${issue.data.number}`);

    - name: Upload availability report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: availability-report-${{ github.run_number }}
        path: |
          availability_report.md
          availability_results.json
        retention-days: 7
